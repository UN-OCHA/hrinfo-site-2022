<?php

/**
 * @file
 * Template overrides, preprocess, and hooks for the OCHA Common Design theme.
 */

use Drupal\group\Entity\GroupRelationship;

/**
 * Implements hook_preprocess_html().
 */
function common_design_subtheme_preprocess_html(&$vars) {
  // Get path to active theme.
  $theme_handler = \Drupal::service('theme_handler');
  $theme_path = $theme_handler->getTheme($theme_handler->getDefault())->getPath();

  // Construct a <link> for the legacy favicon, which we disabled in the config
  // for the site via global theme settings. We're modifying a couple of the
  // attributes so it's easiest to redefine it in code.
  //
  // @see config/system.theme.global.yml
  $classic_favicon = [
    'rel' => 'alternate icon',
    'href' => '/' . $theme_path . '/favicon.ico',
    'type' => 'image/vnd.microsoft.icon',
    'sizes' => 'any',
  ];

  // Construct a <link> for our SVG favicon.
  $svg_favicon = [
    'rel' => 'icon',
    'href' => '/' . $theme_path . '/favicon.svg',
    'type' => 'image/svg+xml',
    'class' => 'svg-favicon',
  ];

  // Add <link> tags to HTML response.
  $vars['page']['#attached']['html_head_link'][] = [
    $classic_favicon,
    'classic-favicon',
  ];
  $vars['page']['#attached']['html_head_link'][] = [
    $svg_favicon,
    'svg-favicon',
  ];
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function common_design_subtheme_theme_suggestions_fullcalendar_calendar_alter(array &$suggestions, array $variables, $hook) {
  $suggestions[] = $hook . '__hri';
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function common_design_subtheme_theme_suggestions_fullcalendar_alter(array &$suggestions, array $variables, $hook) {
  $suggestions[] = $hook . '__hri';
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function common_design_subtheme_theme_suggestions_node_alter(array &$suggestions, array $variables, $hook) {
  if (!in_array('node__page__full', $suggestions)) {
    return;
  }

  $grouptypes = GroupRelationship::loadByEntity($variables['elements']['#node']);
  if (empty($grouptypes)) {
    return;
  }
  $key = array_key_first($grouptypes);
  $grouptype = $grouptypes[$key]->getGroupType();
  if ($grouptype->id() != 'cluster') {
    return;
  }
  $group = $grouptypes[$key]->getGroup();
  $sitrep_tid = \Drupal::state()->get('rwr_sitrep:sitrep_tid');
  if ($group->get('field_group_type')->first() && $group->get('field_group_type')->first()->getValue()['target_id'] == $sitrep_tid) {
    $suggestions[] = 'node__page__full__sitrep';
  }

}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function common_design_subtheme_theme_suggestions_paragraph_alter(&$suggestions, $variables) {
  $paragraph = $variables['elements']['#paragraph'];
  $parent_entity = $paragraph->getParentEntity();
  $parent_field_name = $paragraph->parent_field_name->value;

  if ($parent_entity) {
    $suggestions[] = 'paragraph__' . $parent_entity->bundle() . '__' . $paragraph->bundle();
  }
  if ($parent_entity && $parent_field_name) {
    $suggestions[] = 'paragraph__' . $parent_entity->bundle() . '__' . $parent_field_name . '__' . $paragraph->bundle();
  }
}
