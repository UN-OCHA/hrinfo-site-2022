<?php

/**
 * @file
 * Helpers for the sitrep module.
 */

use Drupal\Core\Cache\RefinableCacheableDependencyInterface;
use Drupal\Core\Url;
use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_menu_local_tasks_alter().
 *
 * Remove or adjust a local task for operations or clusters.
 * If this is an operation, have the link lead to that operation's situation
 * reports only.
 * If this is a cluster, remove the link unless the cluster has a tag withpdfs
 * enabled, in which case change the label accordingly.
 *
 * @see rwr_sitrep.links.task.yml
 */
function rwr_sitrep_menu_local_tasks_alter(&$data, $route_name, RefinableCacheableDependencyInterface &$cacheability) {
  $has_sitrep = FALSE;

  /** @var \Drupal\group\Entity\Group */
  $group = \Drupal::routeMatch()->getParameter('group');
  if (!$group) {
    return;
  }

  // Check clusters.
  if ($group->getGroupType()->id() == 'cluster') {
    // Make sure field exists and has a value.
    if ($group->hasField('field_cluster_subtype') && !$group->get('field_cluster_subtype')->isEmpty()) {
      $term = $group->get('field_cluster_subtype')->entity;
      if ($term->hasField('field_pdf_enabled') && $term->field_pdf_enabled->value) {
        $label = $term->field_collection_label->value ?? $term->label();
        $data['tabs'][0]['views_view:view.group_nodes.page_1']['#link']['title'] = $label;
        $has_sitrep = TRUE;
      }
    }
  }
  // Check operations.
  elseif ($group->getGroupType()->id() == 'operation') {
    $subgroups = $group->getRelatedEntities('subgroup:cluster');
    if (!empty($subgroups)) {
      /** @var \Drupal\group\Entity\Group $subgroup */
      foreach ($subgroups as $subgroup) {
        if ($subgroup->hasField('field_cluster_subtype') && !$subgroup->get('field_cluster_subtype')->isEmpty()) {
          $term = $subgroup->get('field_cluster_subtype')->entity;
          if ($term->hasField('field_pdf_enabled') && $term->field_pdf_enabled->value) {
            $data['tabs'][0]['rwr_sitrep.local_tasks:rwr_sitrep.operation']['#link']['url'] = Url::fromRoute('view.group_nodes.page_1', ['group' => $subgroup->id()]);
          }
          $has_sitrep = TRUE;
          break;
        }
      }

    }
  }

  if (!$has_sitrep) {
    unset($data['tabs'][0]['rwr_sitrep.local_tasks:rwr_sitrep.operation']);
  }
}

/**
 * Create term if it doesn't exist.
 */
function rwr_sitrep_create_term_if_needed(string $vid, string $label) : Term {
  $terms = \Drupal::entityTypeManager()
    ->getStorage('taxonomy_term')
    ->loadByProperties([
      'vid' => $vid,
      'name' => $label,
    ]);

  if (!empty($terms)) {
    $term = reset($terms);
    return $term;
  }

  $term = Term::create([
    'vid' => $vid,
    'name' => $label,
  ]);

  $term->setPublished()
    ->save();

  return $term;
}
