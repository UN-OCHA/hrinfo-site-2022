diff --git a/src/Plugin/Field/FieldWidget/LayoutParagraphsWidget.php b/src/Plugin/Field/FieldWidget/LayoutParagraphsWidget.php
index 55d5af1..38fda4b 100644
--- a/src/Plugin/Field/FieldWidget/LayoutParagraphsWidget.php
+++ b/src/Plugin/Field/FieldWidget/LayoutParagraphsWidget.php
@@ -282,11 +282,73 @@ class LayoutParagraphsWidget extends WidgetBase implements ContainerFactoryPlugi
       : FALSE;
 
     // Build the preview and render it in the form.
+    //
+    // We want to display the preview in the most logical language based on
+    // the target translation language and the source entity. So we determine
+    // which version to use as follows:
+    //
+    // 1. Target language (when creating a new translation).
+    // 2. Source language (when creating a new translation).
+    // 3. Form language (when editing an existing translation).
+    // 4. Entity current language (default).
     $preview = [];
     if (isset($entity)) {
+      // Form language.
+      $langcode = $form_state->get('langcode');
+
+      // Current entity language.
+      $entity_langcode = $entity->language()->getId();
+
+      // Retrieve the translation target language.
+      $target_language = $form_state->get(['content_translation', 'target']);
+      $target_langcode = $target_language ? $target_language->getId() : '';
+
+      // Retrieve the translation source language.
+      $source_language = $form_state->get(['content_translation', 'source']);
+      $source_langcode = $source_language ? $source_language->getId() : '';
+
+      // Use the target language for the preview if available. That will be
+      // the case when the form is rebuilt after editing the paragraph.
+      // Ex: /node/{ID}/add/translations/add/es/ar -> Arabic.
+      if (!empty($target_langcode) && $entity->hasTranslation($target_langcode)) {
+        $preview_langcode = $target_langcode;
+      }
+      // If the target language is not available, for example, before editing
+      // the paragraph to create the translation, we try to use the version
+      // corresponding to the source language of the translation, which
+      // should correspond to the language of the host entity.
+      // Ex: /node/{ID}/add/translations/add/es/ar -> Spanish.
+      elseif (!empty($source_langcode) && $entity->hasTranslation($source_langcode)) {
+        $preview_langcode = $source_langcode;
+      }
+      // When editing an existing translation, the language of the form is
+      // the language of the translation if the host entity has a translation
+      // for that language.
+      // Ex: /es/node/{id}/edit -> Spanish.
+      elseif ($entity->hasTranslation($langcode)) {
+        $preview_langcode = $langcode;
+      }
+      // Default to the current version of the entity. That happens when editing
+      // and the host entity doesn't have a translation matching the form
+      // language.
+      // Ex: /fr/node/{id}/edit -> French but host doesn't have such translation
+      // in which case, drupal shows the edit form of the node in its default
+      // language.
+      else {
+        $preview_langcode = $entity_langcode;
+      }
+
+      // Select the entity to use for the preview.
+      if ($preview_langcode !== $entity_langcode && $entity->hasTranslation($preview_langcode)) {
+        $preview_entity = $entity->getTranslation($preview_langcode);
+      }
+      else {
+        $preview_entity = $entity;
+      }
+
       $preview_view_mode = $this->getSetting('preview_view_mode');
       $view_builder = $this->entityTypeManager->getViewBuilder($entity->getEntityTypeId());
-      $preview = $view_builder->view($entity, $preview_view_mode, $entity->language()->getId());
+      $preview = $view_builder->view($preview_entity, $preview_view_mode, $preview_langcode);
       $preview['#cache']['max-age'] = 0;
       $preview['#attributes']['class'][] = Html::cleanCssIdentifier($entity->uuid() . '-preview');
     }
